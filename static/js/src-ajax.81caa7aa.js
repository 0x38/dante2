(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./src/ajax.mdx":function(e,n,a){"use strict";a.r(n);var r=a("./node_modules/react/index.js"),t=a.n(r),o=a("./node_modules/@mdx-js/tag/dist/index.js"),s=a("./node_modules/docz/dist/index.m.js"),l=a("./src/site/data/poc.js"),c=a("./src/editor/components/Dante/Dante.js");function i(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}n.default=function(e){var n=e.components,a=i(e,["components"]);return t.a.createElement(o.MDXTag,{name:"wrapper",components:n},t.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"ajax-operations"}},t.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#ajax-operations"}},t.a.createElement(o.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"AJAX Operations"),t.a.createElement(o.MDXTag,{name:"p",components:n},"The xhr option is a set of callbacks that will be called on any ajax operation.\nThis is usefull when you want to display a loaders when the editor is saving content and then display success or error messages when operation is done."),t.a.createElement(o.MDXTag,{name:"pre",components:n},t.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre"},"xhr: {\n  before_handler: func,\n  success_handler: func,\n  failure_handler: func\n}\n")),t.a.createElement(o.MDXTag,{name:"p",components:n},"The following example will raise and alert on before send and on error."),t.a.createElement(s.d,{__position:0,__code:"<Dante\n  data_storage={{\n    url: '/save_path',\n    method: 'POST',\n  }}\n  xhr={{\n    before_handler: function() {\n      alert('this is the before ajax handler')\n    },\n    failure_handler: function(error) {\n      alert('this is the error ajax handler')\n    },\n  }}\n/>",__scope:{props:a,Readme:l.c,Dante:c.a}},t.a.createElement(c.a,{data_storage:{url:"/save_path",method:"POST"},xhr:{before_handler:function(){alert("this is the before ajax handler")},failure_handler:function(e){alert("this is the error ajax handler")}}})))}}}]);